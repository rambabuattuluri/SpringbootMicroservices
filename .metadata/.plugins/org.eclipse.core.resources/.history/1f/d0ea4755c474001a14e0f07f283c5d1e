package com.springboot.microservice.ConvertCurrency;

import java.util.HashMap;
import java.util.Map;

import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@SpringBootApplication
@RestController
public class ConvertCurrencyController {
	
	private static Map<String, ConvertCurrencyBean> repo = new HashMap<>();
	static {
	     ConvertCurrencyBean bean = new ConvertCurrencyBean();
	     
	     bean.setId(1L);
	     bean.setFromCountryCode("USD");
	     bean.setToCountryCode("IND");
	     bean.setConversionFactor(74.78);
	     bean.setConvertAmount(1);
	     bean.setConvertedAmount(74.78);
	     
	     repo.put(bean.getFromCountryCode(), bean);
	     
	     ConvertCurrencyBean bean2 = new ConvertCurrencyBean();
	     
	     bean2.setId(2L);
	     bean2.setFromCountryCode("CAD");
	     bean2.setToCountryCode("IND");
	     bean2.setConversionFactor(54.45);
	     bean2.setConvertAmount(1);
	     bean2.setConvertedAmount(54.45);
	     
	     repo.put(bean2.getFromCountryCode(), bean2);
	     
	     ConvertCurrencyBean bean3 = new ConvertCurrencyBean();
	     
	     bean3.setId(3L);
	     bean3.setFromCountryCode("EUR");
	     bean3.setToCountryCode("IND");
	     bean3.setConversionFactor(87.33);
	     bean3.setConvertAmount(1);
	     bean3.setConvertedAmount(87.33);
	     
	     repo.put(bean3.getFromCountryCode(), bean3);
	  
	   }
	
	@RequestMapping("/convertCurrency/from/{fromCountryCode}/amount/{convertAmount}")
    public ResponseEntity<Object> convertCurrency(@PathVariable("fromCountryCode") String fromCountryCode, @PathVariable("convertAmount") double convertAmount) {
        System.out.println("fromCountryCode: " + fromCountryCode);
        System.out.println("convertAmont: " + convertAmount);
        if(repo.containsKey(fromCountryCode)) {
         ConvertCurrencyBean value = repo.get(fromCountryCode);
         value.setConvertedAmount(value.getConversionFactor()*convertAmount);
         return new ResponseEntity<>("Converted Amount: " + value.getConversionFactor() , HttpStatus.OK);
        }
        else { 
        return new ResponseEntity<>("Input CountryCode is not Found " , HttpStatus.FOUND);   
	}
	}
}
